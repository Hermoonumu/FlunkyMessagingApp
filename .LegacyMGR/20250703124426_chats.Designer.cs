// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MessagingApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250703124426_chats")]
    partial class chats
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MessagingApp.Models.Chat", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.HasKey("ID");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("MessagingApp.Models.Message", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long?>("DestinationID")
                        .HasColumnType("bigint");

                    b.Property<long>("OriginID")
                        .HasColumnType("bigint");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("chatID")
                        .HasColumnType("bigint");

                    b.Property<bool>("isRead")
                        .HasColumnType("boolean");

                    b.HasKey("ID");

                    b.HasIndex("DestinationID");

                    b.HasIndex("OriginID");

                    b.HasIndex("chatID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MessagingApp.Models.RefreshToken", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("MessagingApp.Models.RevokedJWTs", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("JTI")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("revokedJWTs");
                });

            modelBuilder.Entity("MessagingApp.Models.User", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasAlternateKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserChatJoinTable", b =>
                {
                    b.Property<long>("ChatID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("ChatID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("UserChatJoinTable", (string)null);
                });

            modelBuilder.Entity("MessagingApp.Models.Message", b =>
                {
                    b.HasOne("MessagingApp.Models.User", "DestinationUser")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("DestinationID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MessagingApp.Models.User", "OriginUser")
                        .WithMany("SentMessages")
                        .HasForeignKey("OriginID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MessagingApp.Models.Chat", "chat")
                        .WithMany("Messages")
                        .HasForeignKey("chatID");

                    b.Navigation("DestinationUser");

                    b.Navigation("OriginUser");

                    b.Navigation("chat");
                });

            modelBuilder.Entity("MessagingApp.Models.RefreshToken", b =>
                {
                    b.HasOne("MessagingApp.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("UserChatJoinTable", b =>
                {
                    b.HasOne("MessagingApp.Models.Chat", null)
                        .WithMany()
                        .HasForeignKey("ChatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UserChatJoinTable_Chats_ChatID");

                    b.HasOne("MessagingApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UserChatJoinTable_Users_UserID");
                });

            modelBuilder.Entity("MessagingApp.Models.Chat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("MessagingApp.Models.User", b =>
                {
                    b.Navigation("ReceivedMessages");

                    b.Navigation("SentMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
